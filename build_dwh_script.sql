 /*
 RUN FOLLOWING SCRIPTS IN GIVEN ORDER
 
 1) RUN schemas.sql

 2) RUN ALL SCRIPTS LOCATED IN BELOW FOLDERS TO INITIALIZE ALL PROCEDURES AND TABLES
 - Final-Project\BL_CL\Tables\
 - Final-Project\BL_CL\Procedures\
 
 3) RUN ALL SCRIPTS IN BELOW FOLDER TO CREATE TABLES FOR 3NF LAYER.
 - Final-Project\BL_3NF
 
 OR RUN FOLLOWING SCRIPT TO INITIALIZE ALL OBJECTS WITH ONE SCRIPT
 Final-Project\BL_3NF\bl_3nf_ddl.sql 
 
 4) RUN ALL SCRIPTS IN BELOW FOLDER TO CREATE TABLES FOR 3NF LAYER.
 - Final-Project\BL_DM
 
 OR RUN FOLLOWING SCRIPT TO INITIALIZE ALL OBJECTS WITH ONE SCRIPT
 - Final-Project\BL_DM\bl_dm_ddl.sql 
 
 5) RUN FOLLOWING SCRIPT TO INITLALIZE MASTER PROCEDURE TO LOAD DATA
 - Final-Project\BL_CL\Procedures\DWH_Master_load.sql
 
 6) RUN FOLLOWING SCRIPT TO INITIALIZE TEST PROCEDURES
 - Final-Project\BL_CL\test.sql
*/
 

-- RUN THE PROCEDURE TO LOAD DATA FROM ONLINE AND OFFLINE SOURCE. SPECIFY PATH TO ONLINE (on_source) AND OFFLINE (off_source) SOURCES ON YOUR DRIVE
CALL BL_CL.SRC_ONLINE_SALES_LOAD_CSV('D:\DWH\Task1\SALES_ONLINE.CSV');
CALL BL_CL.SRC_OFFLINE_SALES_LOAD_CSV('D:\DWH\Task1\SALES_OFFLINE.CSV');

-- THIS VIEW SHOWS IF THERE EXISTS DATA FROM EXTERNAL SOURCES WHICH WAS NOT ADDED TO DWH
SELECT * FROM BL_CL.SALES_INCREMENT;

-- RUN MASTE PROCEDURE TO LOAD DATA TO 3NF AND DM LAYER
CALL BL_CL.DWH_LOAD_MASTER();

-- CHECK LOGS IF DATA WAS ADDED SUCCESFULY. EACH TABLE SHOULD HAVE ROWS ADDED
SELECT * FROM BL_CL.mta_logs;

-- CHECK INCREMENTAL LOAD TABLE
SELECT * FROM BL_CL.mta_incremental_load;


-- PERFROM TESTS AFTER INITIAL LOAD
CALL BL_CL.mta_master_test();

-- CHECK TEST TABLE IF THEY WERE PASSED
SELECT * FROM BL_CL.mta_missing_data;
SELECT * FROM BL_CL.mta_unique_data;
SELECT * FROM BL_CL.mta_tests;

-- NEXT STEPS INCLUDE INCREMENTAL LOAD AND SCD2 CHECK.

-- RUN FOLLOWING SCRIPT WITH PATH TO INCREMENTAL DATA FILE WHICH WILL LOAD DATA TO STAGING LAYER
CALL BL_CL.SRC_OFFLINE_SALES_LOAD_CSV('D:\DWH\Task1\SALES_OFFLINE_INC.CSV');

-- THIS VIEW SHOWS IF THERE EXISTS DATA FROM EXTERNAL SOURCES WHICH WAS NOT ADDED TO DWH
SELECT * FROM BL_CL.SALES_INCREMENT;

-- RUN MASTE PROCEDURE TO LOAD INCREMENTAL DATA TO 3NF AND DM LAYER
CALL BL_CL.DWH_LOAD_MASTER();

-- CHECK LOGS IF DATA WAS ADDED SUCCESFULY.
SELECT * FROM BL_CL.mta_logs;

-- PERFROM TESTS AGAIN FTER INCREMENTAL LOAD
CALL BL_CL.mta_master_test();

-- CHECK TEST TABLE IF THEY WERE PASSED
SELECT * FROM BL_CL.mta_missing_data;
SELECT * FROM BL_CL.mta_unique_data;
SELECT * FROM BL_CL.mta_tests;


-- CHECK IF SCD2 DIMENSION WORKS CORRECTLY ON 3NF LAYER
WITH scd AS (
	SELECT employee_id
	FROM BL_3NF.CE_EMPLOYEES_SCD
	GROUP BY employee_id
	HAVING COUNT(*) > 1
)
SELECT e.employee_id, e.first_name, e.last_name, e.email, e.phone_number, e.gender, e.start_dt, e.end_dt, e.is_active 
FROM scd AS scd
LEFT JOIN BL_3NF.CE_EMPLOYEES_SCD AS e ON scd.employee_id = e.employee_id
ORDER BY e.employee_id, e.is_active;

-- CHECK IF SCD2 DIMENSION WORKS CORRECTLY ON DM LAYER
WITH scd AS (
	SELECT employee_surr_id
	FROM BL_DM.DIM_EMPLOYEES_SCD
	GROUP BY employee_surr_id
	HAVING COUNT(*) > 1
)
SELECT e.employee_surr_id, e.first_name, e.last_name, e.email, e.phone_number, e.gender, e.start_dt, e.end_dt, e.is_active 
FROM scd AS scd
LEFT JOIN BL_DM.DIM_EMPLOYEES_SCD AS e ON scd.employee_surr_id = e.employee_surr_id
ORDER BY e.employee_surr_id, e.is_active;

-- SELECT STATEMENTS FOR EACH TABLE IN STAGING LAYER
SELECT * FROM SA_SALES_ONLINE.SRC_SALES_ONLINE;
SELECT * FROM SA_SALES_OFFLINE.SRC_SALES_OFFLINE;

-- SELECT STATEMNTS FOR DEDUPLICATION TABLES
SELECT * FROM BL_CL.T_MAP_PROVINCES;
SELECT * FROM BL_CL.T_MAP_TOWNS;
SELECT * FROM BL_CL.T_MAP_DISTRICTS;

-- SELECT STATEMENTS FOR EACH TABLE IN 3NF LAYER
SELECT * FROM BL_3NF.CE_PROVINCES;
SELECT * FROM BL_3NF.CE_TOWNS;
SELECT * FROM BL_3NF.CE_DISTRICTS;
SELECT * FROM BL_3NF.CE_ADDRESSES;
SELECT * FROM BL_3NF.CE_PRODUCT_CATEGORIES;
SELECT * FROM BL_3NF.CE_PRODUCT_SUBCATEGORIES;
SELECT * FROM BL_3NF.CE_BRANDS;
SELECT * FROM BL_3NF.CE_PRODUCTS;
SELECT * FROM BL_3NF.CE_CUSTOMERS;
SELECT * FROM BL_3NF.CE_EMPLOYEES_SCD;
SELECT * FROM BL_3NF.CE_PAYMENT_METHODS;
SELECT * FROM BL_3NF.CE_DELIVERY_METHODS;
SELECT * FROM BL_3NF.CE_DELIVERIES;
SELECT * FROM BL_3NF.CE_STORES;
SELECT * FROM BL_3NF.CE_SALES;

-- SELECT STATEMENTS FOR EACH TABLE IN DM LAYER
SELECT * FROM BL_DM.DIM_CUSTOMERS;
SELECT * FROM BL_DM.DIM_PRODUCTS;
SELECT * FROM BL_DM.DIM_DELIVERIES;
SELECT * FROM BL_DM.DIM_PAYMENTS;
SELECT * FROM BL_DM.DIM_STORES;
SELECT * FROM BL_DM.DIM_TIME_DAY;
SELECT * FROM BL_DM.DIM_EMPLOYEES_SCD;
SELECT * FROM BL_DM.FCT_SALES_DD;

COPY BL_DM.DIM_CUSTOMERS TO 'D:\DWH\BL_DM\DIM_CUSTOMERS.CSV' DELIMITER ',' CSV HEADER;
COPY BL_DM.DIM_PRODUCTS TO 'D:\DWH\BL_DM\DIM_PRODUCTS.CSV' DELIMITER ',' CSV HEADER;
COPY BL_DM.DIM_DELIVERIES TO 'D:\DWH\BL_DM\DIM_DELIVERIES.CSV' DELIMITER ',' CSV HEADER;
COPY BL_DM.DIM_PAYMENTS TO 'D:\DWH\BL_DM\DIM_PAYMENTS.CSV' DELIMITER ',' CSV HEADER;
COPY BL_DM.DIM_STORES TO 'D:\DWH\BL_DM\DIM_STORES.CSV' DELIMITER ',' CSV HEADER;
COPY BL_DM.DIM_TIME_DAY TO 'D:\DWH\BL_DM\DIM_TIME_DAY.CSV' DELIMITER ',' CSV HEADER;
COPY BL_DM.DIM_EMPLOYEES_SCD TO 'D:\DWH\BL_DM\DIM_EMPLOYEES_SCD.CSV' DELIMITER ',' CSV HEADER;
COPY (SELECT * FROM BL_DM.FCT_SALES_DD) TO 'D:\DWH\BL_DM\FCT_SALES_DD.CSV' DELIMITER ',' CSV HEADER;



