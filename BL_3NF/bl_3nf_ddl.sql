-- GENERATE SEQUENCE FOR PK OF CE_PROVINCES
CREATE SEQUENCE IF NOT EXISTS BL_3NF.SEQ_CE_PROVINCES_ID START 1;

-- CREATE TABLE CE_PROVINCES
CREATE TABLE IF NOT EXISTS BL_3NF.CE_PROVINCES (
	province_id BIGINT PRIMARY KEY,
	province_name VARCHAR(255) NOT NULL,
	source_system VARCHAR(255) NOT NULL,
	source_entity VARCHAR(255) NOT NULL,
	province_src_id VARCHAR(255) NOT NULL,
	insert_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	update_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- CONNECT SEQUENCE WITH PK OF CE_PROVINCES
ALTER SEQUENCE BL_3NF.SEQ_CE_PROVINCES_ID OWNED BY BL_3NF.CE_PROVINCES.PROVINCE_ID;

-- INSERT DEFAULT ROW
INSERT INTO BL_3NF.CE_PROVINCES (province_id, province_name, province_src_id, source_system, source_entity, insert_dt, update_dt) 
SELECT -1 AS id,
		'n. a.',
		'n. a.',
		'MANUAL',
		'MANUAL',
		'1990-01-01'::TIMESTAMP,
		'1990-01-01'::TIMESTAMP
WHERE NOT EXISTS (SELECT 1 FROM BL_3NF.CE_PROVINCES WHERE province_id = -1);
COMMIT;

-- GENERATE SEQUENCE FOR PK OF CE_TOWNS
CREATE SEQUENCE IF NOT EXISTS BL_3NF.SEQ_CE_TOWN_ID START 1;

-- CREATE TABLE CE_TOWNS
CREATE TABLE IF NOT EXISTS BL_3NF.CE_TOWNS (
	town_id BIGINT PRIMARY KEY,
	province_id BIGINT NOT NULL REFERENCES BL_3NF.CE_PROVINCES (province_id),
	town_name VARCHAR(255) NOT NULL,
	source_system VARCHAR(255) NOT NULL,
	source_entity VARCHAR(255) NOT NULL,
	town_src_id VARCHAR(255) NOT NULL,
	insert_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	update_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- CONNECT SEQUENCE WITH PK OF CE_TOWNS
ALTER SEQUENCE BL_3NF.SEQ_CE_TOWN_ID OWNED BY BL_3NF.CE_TOWNS.TOWN_ID;

-- INSERT DEFAULT ROW
INSERT INTO BL_3NF.CE_TOWNS (town_id, town_name, province_id, town_src_id, source_system, source_entity, insert_dt, update_dt) 
SELECT -1 AS id,
		'n. a.',
		-1,
		'n. a.',
		'MANUAL',
		'MANUAL',
		'1990-01-01'::TIMESTAMP,
		'1990-01-01'::TIMESTAMP
WHERE NOT EXISTS (SELECT 1 FROM BL_3NF.CE_TOWNS WHERE town_id = -1);
COMMIT;

-- GENERATE SEQUENCE FOR PK OF CE_PROVINCES
CREATE SEQUENCE IF NOT EXISTS BL_3NF.SEQ_CE_DISTRICT_ID START 1;

-- CREATE TABLE CE_DISTRICTS
CREATE TABLE IF NOT EXISTS BL_3NF.CE_DISTRICTS (
	district_id BIGINT PRIMARY KEY,
	town_id BIGINT NOT NULL REFERENCES BL_3NF.CE_TOWNS (town_id),
	district_name VARCHAR(255) NOT NULL,
	source_system VARCHAR(255) NOT NULL,
	source_entity VARCHAR(255) NOT NULL,
	district_src_id VARCHAR(255) NOT NULL,
	insert_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	update_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- CONNECT SEQUENCE WITH PK OF CE_PROVINCES
ALTER SEQUENCE BL_3NF.SEQ_CE_DISTRICT_ID OWNED BY BL_3NF.CE_DISTRICTS.DISTRICT_ID;

-- INSERT DEFAULT ROW
INSERT INTO BL_3NF.CE_DISTRICTS (district_id, district_name, town_id, district_src_id, source_system, source_entity, insert_dt, update_dt) 
SELECT -1 AS id,
			'n. a.',
			-1,
			'n. a.',
			'MANUAL',
			'MANUAL',
			'1990-01-01'::TIMESTAMP,
			'1990-01-01'::TIMESTAMP
WHERE NOT EXISTS (SELECT 1 FROM BL_3NF.CE_DISTRICTS WHERE district_id = -1);
COMMIT;

-- GENERATE SEQUENCE FOR PK OF CE_PROVINCES
CREATE SEQUENCE IF NOT EXISTS BL_3NF.SEQ_CE_ADDRESS_ID START 1;

-- CREATE TABLE CE_ADDRESSES
CREATE TABLE IF NOT EXISTS BL_3NF.CE_ADDRESSES (
	address_id BIGINT PRIMARY KEY,
	address VARCHAR(255) NOT NULL,
	district_id BIGINT NOT NULL REFERENCES BL_3NF.CE_DISTRICTS (district_id),
	source_system VARCHAR(255) NOT NULL,
	source_entity VARCHAR(255) NOT NULL,
	address_src_id VARCHAR(255) NOT NULL,
	insert_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	update_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- CONNECT SEQUENCE WITH PK OF CE_PROVINCES
ALTER SEQUENCE BL_3NF.SEQ_CE_ADDRESS_ID OWNED BY BL_3NF.CE_ADDRESSES.ADDRESS_ID;

-- INSERT DEFAULT ROW
INSERT INTO BL_3NF.CE_ADDRESSES (address_id, address, district_id, address_src_id, source_system, source_entity, insert_dt, update_dt) 
SELECT -1 AS id,
			'n. a.',
			-1,
			'n. a.',
			'MANUAL',
			'MANUAL',
			'1990-01-01'::TIMESTAMP,
			'1990-01-01'::TIMESTAMP
WHERE NOT EXISTS (SELECT 1 FROM BL_3NF.CE_ADDRESSES WHERE address_id = -1);
COMMIT;

-- GENERATE SEQUENCE FOR PK OF CE_PRODUCT_CATEGORIES
CREATE SEQUENCE IF NOT EXISTS BL_3NF.SEQ_CE_PRODUCT_CATEGORY_ID START 1;

-- CREATE TABLE CE_PRODUCT_CATEGORIES
CREATE TABLE IF NOT EXISTS BL_3NF.CE_PRODUCT_CATEGORIES (
	product_category_id BIGINT PRIMARY KEY,
	product_category_name VARCHAR(255) NOT NULL,
	source_system VARCHAR(255) NOT NULL,
	source_entity VARCHAR(255) NOT NULL,
	product_category_src_id VARCHAR(255) NOT NULL,
	insert_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	update_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- CONNECT SEQUENCE WITH PK OF CE_PRODUCT_CATEGORIES
ALTER SEQUENCE BL_3NF.SEQ_CE_PRODUCT_CATEGORY_ID OWNED BY BL_3NF.CE_PRODUCT_CATEGORIES.PRODUCT_CATEGORY_ID;

-- INSERT DEFAULT ROW
INSERT INTO BL_3NF.CE_PRODUCT_CATEGORIES(product_category_id, product_category_name, product_category_src_id, source_system, source_entity, insert_dt, update_dt) 
SELECT -1 AS id,
		'n. a.',
		'n. a.',
		'MANUAL',
		'MANUAL',
		'1990-01-01'::TIMESTAMP,
		'1990-01-01'::TIMESTAMP
WHERE NOT EXISTS (SELECT 1 FROM BL_3NF.CE_PRODUCT_CATEGORIES WHERE product_category_id = -1);
COMMIT;

-- GENERATE SEQUENCE FOR PK OF CE_PRODUCT_SUBCATEGORIES
CREATE SEQUENCE IF NOT EXISTS BL_3NF.SEQ_CE_PRODUCT_SUBCATEGORY_ID START 1;

-- CREATE TABLE CE_PRODUCT_SUBCATEGORIES
CREATE TABLE IF NOT EXISTS BL_3NF.CE_PRODUCT_SUBCATEGORIES (
	product_subcategory_id BIGINT PRIMARY KEY,
	product_category_id BIGINT NOT NULL REFERENCES BL_3NF.CE_PRODUCT_CATEGORIES (product_category_id),
	product_subcategory_name VARCHAR(255) NOT NULL,
	source_system VARCHAR(255) NOT NULL,
	source_entity VARCHAR(255) NOT NULL,
	product_subcategory_src_id VARCHAR(255) NOT NULL,
	insert_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	update_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- CONNECT SEQUENCE WITH PK OF CE_PRODUCT_SUBCATEGORIES
ALTER SEQUENCE BL_3NF.SEQ_CE_PRODUCT_SUBCATEGORY_ID OWNED BY BL_3NF.CE_PRODUCT_SUBCATEGORIES.PRODUCT_SUBCATEGORY_ID;

-- INSERT DEFAULT ROW
INSERT INTO BL_3NF.CE_PRODUCT_SUBCATEGORIES(product_subcategory_id, product_subcategory_name, product_category_id, product_subcategory_src_id, source_system, source_entity, insert_dt, update_dt) 
SELECT -1 AS id,
		'n. a.',
		-1,
		'n. a.',
		'MANUAL',
		'MANUAL',
		'1990-01-01'::TIMESTAMP,
		'1990-01-01'::TIMESTAMP
WHERE NOT EXISTS (SELECT 1 FROM BL_3NF.CE_PRODUCT_SUBCATEGORIES WHERE product_subcategory_id = -1);
COMMIT;

-- GENERATE SEQUENCE FOR PK OF CE_BRANDS
CREATE SEQUENCE IF NOT EXISTS BL_3NF.SEQ_CE_BRAND_ID START 1;

-- CREATE TABLE CE_BRANDS
CREATE TABLE IF NOT EXISTS BL_3NF.CE_BRANDS (
	brand_id BIGINT PRIMARY KEY,
	brand_name VARCHAR(255) NOT NULL,
	source_system VARCHAR(255) NOT NULL,
	source_entity VARCHAR(255) NOT NULL,
	brand_src_id VARCHAR(255) NOT NULL,
	insert_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	update_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- CONNECT SEQUENCE WITH PK OF CE_BRANDS
ALTER SEQUENCE BL_3NF.SEQ_CE_BRAND_ID OWNED BY BL_3NF.CE_BRANDS.BRAND_ID;

-- INSERT DEFAULT ROW
INSERT INTO BL_3NF.CE_BRANDS (brand_id, brand_name, brand_src_id, source_system, source_entity, insert_dt, update_dt) 
SELECT -1 AS id,
		'n. a.',
		'n. a.',
		'MANUAL',
		'MANUAL',
		'1990-01-01'::TIMESTAMP,
		'1990-01-01'::TIMESTAMP
WHERE NOT EXISTS (SELECT 1 FROM BL_3NF.CE_BRANDS WHERE brand_id = -1);
COMMIT;

-- GENERATE SEQUENCE FOR PK OF  CE_PRODUCTS
CREATE SEQUENCE IF NOT EXISTS BL_3NF.SEQ_CE_PRODUCT_ID START 1;

-- CREATE TABLE CE_PRODUCTS
CREATE TABLE IF NOT EXISTS BL_3NF.CE_PRODUCTS (
	product_id BIGINT PRIMARY KEY,
	brand_id BIGINT NOT NULL REFERENCES BL_3NF.CE_BRANDS (brand_id),
	product_subcategory_id BIGINT NOT NULL REFERENCES BL_3NF.CE_PRODUCT_SUBCATEGORIES (product_subcategory_id),
	product_name VARCHAR(255) NOT NULL,
	source_system VARCHAR(255) NOT NULL,
	source_entity VARCHAR(255) NOT NULL,
	product_src_id VARCHAR(255) NOT NULL,
	insert_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	update_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP
);
-- CONNECT SEQUENCE WITH PK OF CE_PRODUCTS
ALTER SEQUENCE BL_3NF.SEQ_CE_PRODUCT_ID OWNED BY BL_3NF.CE_PRODUCTS.PRODUCT_ID;

-- INSERT DEFAULT ROW
INSERT INTO BL_3NF.CE_PRODUCTS (product_id, product_name, brand_id, product_subcategory_id, product_src_id, source_system, source_entity, insert_dt, update_dt) 
SELECT -1 AS id,
		'n. a.',
		-1,
		-1,
		'n. a.',
		'MANUAL',
		'MANUAL',
		'1990-01-01'::TIMESTAMP,
		'1990-01-01'::TIMESTAMP
WHERE NOT EXISTS (SELECT 1 FROM BL_3NF.CE_PRODUCTS WHERE product_id = -1);
COMMIT;

-- GENERATE SEQUENCE FOR PK OF CE_CUSTOMERS
CREATE SEQUENCE IF NOT EXISTS BL_3NF.SEQ_CE_CUSTOMER_ID START 1;

-- CREATE TABLE CE_CUSTOMERS
CREATE TABLE IF NOT EXISTS BL_3NF.CE_CUSTOMERS (
	customer_id BIGINT PRIMARY KEY,
	first_name VARCHAR(255) NOT NULL,
	last_name VARCHAR(255) NOT NULL,
	email VARCHAR(255) NOT NULL,
	phone_number VARCHAR(255) NOT NULL,
	gender VARCHAR(255) NOT NULL,
	birthdate_dt DATE NOT NULL,
	source_system VARCHAR(255) NOT NULL,
	source_entity VARCHAR(255) NOT NULL,
	customer_src_id VARCHAR(255) NOT NULL,
	insert_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	update_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- CONNECT SEQUENCE WITH PK OF CE_CUSTOMERS
ALTER SEQUENCE BL_3NF.SEQ_CE_CUSTOMER_ID OWNED BY BL_3NF.CE_CUSTOMERS.CUSTOMER_ID;

-- INSERT DEFAULT ROW
INSERT INTO BL_3NF.CE_CUSTOMERS (customer_id, first_name, last_name, email, phone_number, gender, birthdate_dt, customer_src_id, source_system, source_entity, insert_dt, update_dt) 
SELECT -1 AS id,
		'n. a.',
		'n. a.',
		'n. a.',
		'n. a.',
		'n. a.',
		'1990-01-01'::TIMESTAMP,
		'n. a.',
		'MANUAL',
		'MANUAL',
		'1990-01-01'::TIMESTAMP,
		'1990-01-01'::TIMESTAMP
WHERE NOT EXISTS (SELECT 1 FROM BL_3NF.CE_CUSTOMERS WHERE customer_id = -1);
COMMIT;

-- GENERATE SEQUENCE FOR PK OF CE_PAYMENT_METHODS
CREATE SEQUENCE IF NOT EXISTS BL_3NF.SEQ_CE_PAYMENT_METHOD_ID START 1;

-- CREATE TABLE CE_PAYMENT_METHODS
CREATE TABLE IF NOT EXISTS BL_3NF.CE_PAYMENT_METHODS (
	payment_method_id BIGINT PRIMARY KEY,
	payment_name VARCHAR(255) NOT NULL,
	source_system VARCHAR(255) NOT NULL,
	source_entity VARCHAR(255) NOT NULL,
	payment_method_src_id VARCHAR(255) NOT NULL,
	insert_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	update_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- CONNECT SEQUENCE WITH PK OF CE_PAYMENT_METHODS
ALTER SEQUENCE BL_3NF.SEQ_CE_PAYMENT_METHOD_ID OWNED BY BL_3NF.CE_PAYMENT_METHODS.PAYMENT_METHOD_ID;

-- INSERT DEFAULT ROW
INSERT INTO BL_3NF.CE_PAYMENT_METHODS (payment_method_id, payment_name, payment_method_src_id, source_system, source_entity, insert_dt, update_dt) 
SELECT -1 AS id,
		'n. a.',
		'n. a.',
		'MANUAL',
		'MANUAL',
		'1990-01-01'::TIMESTAMP,
		'1990-01-01'::TIMESTAMP
WHERE NOT EXISTS (SELECT 1 FROM BL_3NF.CE_PAYMENT_METHODS WHERE payment_method_id = -1);
COMMIT;

-- GENERATE SEQUENCE FOR PK OF CE_DELIVERY_METHODS
CREATE SEQUENCE IF NOT EXISTS BL_3NF.SEQ_CE_DELIVERY_METHOD_ID START 1;

-- CREATE TABLE CE_DELIVERY_METHODS
CREATE TABLE IF NOT EXISTS BL_3NF.CE_DELIVERY_METHODS (
	delivery_method_id BIGINT PRIMARY KEY,
	delivery_method_name VARCHAR(255) NOT NULL,
	source_system VARCHAR(255) NOT NULL,
	source_entity VARCHAR(255) NOT NULL,
	delivery_method_src_id VARCHAR(255) NOT NULL,
	insert_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	update_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- CONNECT SEQUENCE WITH PK OF CE_DELIVERY_METHODS
ALTER SEQUENCE BL_3NF.SEQ_CE_DELIVERY_METHOD_ID OWNED BY BL_3NF.CE_DELIVERY_METHODS.DELIVERY_METHOD_ID;

-- INSERT DEFAULT ROW
INSERT INTO BL_3NF.CE_DELIVERY_METHODS (delivery_method_id, delivery_method_name, delivery_method_src_id, source_system, source_entity, insert_dt, update_dt) 
SELECT -1 AS id,
		'n. a.',
		'n. a.',
		'MANUAL',
		'MANUAL',
		'1990-01-01'::TIMESTAMP,
		'1990-01-01'::TIMESTAMP
WHERE NOT EXISTS (SELECT 1 FROM BL_3NF.CE_DELIVERY_METHODS WHERE delivery_method_id = -1);
COMMIT;

-- GENERATE SEQUENCE FOR PK OF CE_DELIVERIES
CREATE SEQUENCE IF NOT EXISTS BL_3NF.SEQ_CE_DELIVERY_ID START 1;

-- CREATE TABLE CE_DELIVERIES
CREATE TABLE IF NOT EXISTS BL_3NF.CE_DELIVERIES (
	delivery_id BIGINT PRIMARY KEY,
	delivery_method_id BIGINT NOT NULL REFERENCES BL_3NF.CE_DELIVERY_METHODS (delivery_method_id),
	address_id BIGINT NOT NULL REFERENCES BL_3NF.CE_ADDRESSES (address_id),
	source_system VARCHAR(255) NOT NULL,
	source_entity VARCHAR(255) NOT NULL,
	delivery_src_id VARCHAR(255) NOT NULL,
	insert_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	update_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- CONNECT SEQUENCE WITH PK OF CE_DELIVERIES
ALTER SEQUENCE BL_3NF.SEQ_CE_DELIVERY_ID OWNED BY BL_3NF.CE_DELIVERIES.DELIVERY_ID;

-- INSERT DEFAULT ROW
INSERT INTO BL_3NF.CE_DELIVERIES (delivery_id, delivery_method_id, address_id, delivery_src_id, source_system, source_entity, insert_dt, update_dt) 
SELECT -1 AS id,
		-1,
		-1,
		'n. a.',
		'MANUAL',
		'MANUAL',
		'1990-01-01'::TIMESTAMP,
		'1990-01-01'::TIMESTAMP
WHERE NOT EXISTS (SELECT 1 FROM BL_3NF.CE_DELIVERIES WHERE delivery_id = -1);
COMMIT;

-- GENERATE SEQUENCE FOR PK OF CE_EMPLOYEES_SCD
CREATE SEQUENCE IF NOT EXISTS BL_3NF.SEQ_CE_EMPLOYEE_ID START 1;

-- CREATE TABLE CE_EMPLOYEES_SCD
CREATE TABLE IF NOT EXISTS BL_3NF.CE_EMPLOYEES_SCD (
	employee_id BIGINT,
	first_name VARCHAR(255) NOT NULL,
	last_name VARCHAR(255) NOT NULL,
	email VARCHAR(255) NOT NULL,
	phone_number VARCHAR(255) NOT NULL,
	gender VARCHAR(255) NOT NULL,
	start_dt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	end_dt TIMESTAMP NOT NULL DEFAULT '9999-12-31'::TIMESTAMP,
	is_active BOOL DEFAULT TRUE,
	source_system VARCHAR(255) NOT NULL,
	source_entity VARCHAR(255) NOT NULL,
	employee_src_id VARCHAR(255) NOT NULL,
	insert_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	update_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (employee_id, start_dt)
);

-- CONNECT SEQUENCE WITH PK OF CE_EMPLOYEES_SCD
ALTER SEQUENCE BL_3NF.SEQ_CE_EMPLOYEE_ID OWNED BY BL_3NF.CE_EMPLOYEES_SCD.EMPLOYEE_ID;

-- INSERT DEFAULT ROW
INSERT INTO BL_3NF.CE_EMPLOYEES_SCD (employee_id, first_name, last_name, email, phone_number, gender, start_dt, end_dt, is_active, employee_src_id, source_system, source_entity, insert_dt, update_dt) 
SELECT -1 AS id,
		'n. a.',
		'n. a.',
		'n. a.',
		'n. a.',
		'n. a.',
		'1990-01-01'::TIMESTAMP,
		'9999-12-31'::TIMESTAMP,
		TRUE,
		'n. a.',
		'MANUAL',
		'MANUAL',
		'1990-01-01'::TIMESTAMP,
		'1990-01-01'::TIMESTAMP
WHERE NOT EXISTS (SELECT 1 FROM BL_3NF.CE_EMPLOYEES_SCD WHERE employee_id = -1);
COMMIT;

-- GENERATE SEQUENCE FOR PK OF CE_STORES
CREATE SEQUENCE IF NOT EXISTS BL_3NF.SEQ_CE_STORE_ID START 1;

-- CREATE TABLE CE_STORES
CREATE TABLE IF NOT EXISTS BL_3NF.CE_STORES (
	store_id BIGINT PRIMARY KEY,
	address_id BIGINT NOT NULL REFERENCES BL_3NF.CE_ADDRESSES (address_id),
	store_name VARCHAR(255) NOT NULL,
	email VARCHAR(255) NOT NULL,
	website VARCHAR(255) NOT NULL,
	source_system VARCHAR(255) NOT NULL,
	source_entity VARCHAR(255) NOT NULL,
	store_src_id VARCHAR(255) NOT NULL,
	insert_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	update_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- CONNECT SEQUENCE WITH PK OF CE_STORES
ALTER SEQUENCE BL_3NF.SEQ_CE_STORE_ID OWNED BY BL_3NF.CE_STORES.STORE_ID;

-- INSERT DEFAULT ROW
INSERT INTO BL_3NF.CE_STORES (store_id, address_id, store_name, email, website, store_src_id, source_system, source_entity, insert_dt, update_dt) 
SELECT -1 AS id,
		-1,
		'n. a.',
		'n. a.',
		'n. a.',
		'n. a.',
		'MANUAL',
		'MANUAL',
		'1990-01-01'::TIMESTAMP,
		'1990-01-01'::TIMESTAMP
WHERE NOT EXISTS (SELECT 1 FROM BL_3NF.CE_STORES WHERE store_id = -1);
COMMIT;

-- GENERATE SEQUENCE FOR PK OF CE_SALES
CREATE SEQUENCE IF NOT EXISTS BL_3NF.SEQ_CE_SALE_ID START 1;

-- CREATE CE_SALES TABLE
CREATE TABLE IF NOT EXISTS BL_3NF.CE_SALES (
	sale_id BIGINT PRIMARY KEY,
	order_id BIGINT NOT NULL,
	customer_id BIGINT NOT NULL, --REFERENCES BL_3NF.CE_CUSTOMERS (customer_id),
	payment_method_id BIGINT NOT NULL, --REFERENCES BL_3NF.CE_PAYMENT_METHODS (payment_method_id),
	delivery_id BIGINT NOT NULL, --REFERENCES BL_3NF.CE_DELIVERIES (delivery_id),
	store_id BIGINT NOT NULL, --REFERENCES BL_3NF.CE_STORES (store_id),
	product_id BIGINT NOT NULL, --REFERENCES BL_3NF.CE_PRODUCTS (product_id),
	employee_id BIGINT NOT NULL,
	event_dt DATE NOT NULL,
	delivery_fee NUMERIC(10,2),
	retail_price NUMERIC(10,2),
	quantity INT,
	sale_price NUMERIC(10, 2),
	source_system VARCHAR(255) NOT NULL,
	source_entity VARCHAR(255) NOT NULL,
	sale_src_id VARCHAR(255) NOT NULL,
	insert_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	update_dt DATE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- CONNECT SEQUENCE WITH PK OF CE_SALES
ALTER SEQUENCE BL_3NF.SEQ_CE_SALE_ID OWNED BY BL_3NF.CE_SALES.SALE_ID;


















