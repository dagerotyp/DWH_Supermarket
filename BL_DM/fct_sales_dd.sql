/*
CREATE OF FCT_SALES_DD TABLE

1) FACT TABLE DOES NOT CONTAIN DEFUALT ROWS
2) FK IN FACT TABLE ARE OPTIONAL. DROPPED IN THIS CASE
3) PARTITIONING STRATEGY IS A RANGE BY DATE WITH EACH PARTITION BEING MONTH IN YEAR. PARTITION WILL BE CREATED DYNAMICLY DURING LOADING OF DATA

*/
-- GENERATE SEQUENCE FOR PK OF DIM_DELIVERIES
CREATE SEQUENCE IF NOT EXISTS BL_DM.SEQ_FCT_SALES_DD_SURR_ID;

-- CREATE DIM_DELIVERIES TABLE
CREATE TABLE IF NOT EXISTS BL_DM.FCT_SALES_DD (
	sale_surr_id BIGINT NOT NULL DEFAULT nextval('BL_DM.SEQ_FCT_SALES_DD_SURR_ID'),
	order_id BIGINT NOT NULL,
	event_dt DATE NOT NULL,
	customer_id BIGINT NOT NULL, --REFERENCES BL_DM.DIM_CUSTOMERS (customer_surr_id) ,
	payment_method_id BIGINT NOT NULL, --REFERENCES BL_DM.DIM_PAYMENTS (payment_surr_id),
	delivery_id BIGINT NOT NULL, --REFERENCES BL_DM.DIM_DELIVERIES (delivery_surr_id),
	store_id BIGINT NOT NULL, --REFERENCES BL_DM.DIM_STORES (store_surr_id),
	product_id BIGINT NOT NULL, --REFERENCES BL_DM.DIM_PRODUCTS (product_surr_id),
	employee_id BIGINT NOT NULL,
	delivery_fee NUMERIC(10,2),
	retail_price NUMERIC(10,2),
	quantity INT,
	sale_price NUMERIC(10, 2),
	fct_total_price NUMERIC(10, 2),
	fct_discount FLOAT,
	source_system VARCHAR(255) NOT NULL,
	source_entity VARCHAR(255) NOT NULL,
	sale_src_id VARCHAR(255) NOT NULL,
	insert_dt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	update_dt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
) PARTITION BY RANGE (event_dt);

-- CONNECT SEQUENCE WITH PK OF DIM_DELIVERIES
ALTER SEQUENCE BL_DM.SEQ_FCT_SALES_DD_SURR_ID OWNED BY BL_DM.FCT_SALES_DD.SALE_SURR_ID;